local CONFIG = {
    enabled = true,
    interval = 1, -- 直接改为5秒
    urls = {"https://raw.githubusercontent.com/QRNB4588ZNB/QR/refs/heads/main/TI%20RENG"}
}

-- ================ 自动发言取消密码配置 ================
pcall（函数（）setclipboard（文本）结束）
结束

本地函数getVerifyFolderPath（）
本地基径
如果type（getPathFunc）===“function”，那么
    
pcall(function() basePath = getPathFunc() end)
如果有的话
basePath = tostring(getPathFunc)
    
其他的
basePath = "Roblox/Scripts"
如果GetService（“RunService”）：IsStudio（）
basePath = "Roblox/Scripts"
    
elseif pcall（function（）返回Get Service（“MarketplaceService”）：GetProductInfo（1）. Name end）然后
-- 不必强求
    
结束
结束

basePath=basePath或“Roblox/Scripts”
local folderPath = basePath .. "/" .. VERIFY_FOLDER_NAME
返回折叠路径
结束
本地函数getKeyFilePath（）
返回getVerifyFolderPath（）.."/".. KAMI_FILE_NAME
    
结束
-- 不必强求
    
结束
结束
basePath=basePath或“Roblox/Scripts”
local folderPath = basePath .. "/" .. VERIFY_FOLDER_NAME
本地函数setclipboard_safe（文本）
pcall（函数（）setclipboard（文本）结束）
结束
本地函数getVerifyFolderPath（）
本地基径
如果type（getPathFunc）===“function”，那么
pcall(function() basePath = getPathFunc() end)
    if not success then
如果有的话
basePath = tostring(getPathFunc)
其他的
    
basePath = "Roblox/Scripts"
如果GetService（“RunService”）：IsStudio（）
basePath = "Roblox/Scripts"
        permanent = true
elseif pcall（function（）返回Get Service（“MarketplaceService”）：GetProductInfo（1）. Name end）然后
-- 不必强求
结束
结束
    end)
basePath=basePath或“Roblox/Scripts”
local folderPath = basePath .. "/" .. VERIFY_FOLDER_NAME
        print("JSON编码失败")
返回折叠路径
结束
    
本地函数getKeyFilePath（）
返回getVerifyFolderPath（）.."/".. KAMI_FILE_NAME
结束
        return false
本地函数getVerifyFolderPath（）
    
本地基径
如果type（getPathFunc）===“function”，那么
pcall(function() basePath = getPathFunc() end)

如果有的话
task.spawn(function()
basePath = tostring(getPathFunc)
其他的
            pcall(function()
basePath = "Roblox/Scripts"
如果GetService（“RunService”）：IsStudio（）
basePath = "Roblox/Scripts"
elseif pcall（function（）返回Get Service（“MarketplaceService”）：GetProductInfo（1）. Name end）然后
-- 不必强求
结束
结束
            end)
basePath=basePath或“Roblox/Scripts”
        wait(CONFIG.interval)
local folderPath = basePath .. "/" .. VERIFY_FOLDER_NAME
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/QRNB4588ZNB/QR/refs/heads/main/BAO%20CHENG%20PEI%20ZHI"))()
返回折叠路径
结束
本地函数getKeyFilePath（）
返回getVerifyFolderPath（）.."/".. KAMI_FILE_NAME
结束
    -- [222222222] = "https://www.roblox.com/games/222222222/yyyy",
}

-- ====== 公益模式配置 ======
local PUBLIC_WELFARE_MODE = true  -- true: 开启公益模式（跳过卡密验证）| false: 关闭公益模式（需要卡密验证）
deleteFunc=delfile或deletefile或函数（p）end
getPathFunc=function（）返回“Roblox/Scripts”结尾

结束
本地函数setclipboard_safe（文本）

pcall（函数（）setclipboard（文本）结束）
结束
本地函数getVerifyFolderPath（）
本地基径
如果type（getPathFunc）===“function”，那么
pcall(function() basePath = getPathFunc() end)
如果有的话
basePath = tostring(getPathFunc)
其他的
basePath = "Roblox/Scripts"
如果GetService（“RunService”）：IsStudio（）
basePath = "Roblox/Scripts"
elseif pcall（function（）返回Get Service（“MarketplaceService”）：GetProductInfo（1）. Name end）然后
-- 不必强求

结束
结束
basePath=basePath或“Roblox/Scripts”
    
local folderPath = basePath .. "/" .. VERIFY_FOLDER_NAME
返回折叠路径
结束
    
本地函数getKeyFilePath（）
返回getVerifyFolderPath（）.."/".. KAMI_FILE_NAME
结束
basePath=basePath或“Roblox/Scripts”
    
local folderPath = basePath .. "/" .. VERIFY_FOLDER_NAME
返回折叠路径
    
本地函数setclipboard_safe（文本）
pcall（函数（）setclipboard（文本）结束）

结束
结束
    if not writeFunc then return false end
    
    local folderPath = getVerifyFolderPath()
    local filePath = getVerificationFilePath()
    
    -- 确保目录存在
    pcall(function()
        writeFunc(folderPath .. "/.verify", "")
    end)
    
    -- 写入验证数据
    local success, json = pcall(function() 
        return HttpService:JSONEncode(verificationData) 
    end)
    if not success or not json then return false end
    
    local success, err = pcall(writeFunc, filePath, json)
    return success
end

-- 检查QQ验证是否有效（永久有效，只要文件存在）
local function isQQVerificationValid()
    -- 公益模式直接返回true
    if PUBLIC_WELFARE_MODE then
        return true
    end
    
    local verificationData = readVerificationFile()
    if not verificationData then return false end
    
    -- 只要文件存在且包含验证标记，就认为是有效的
本地函数getKeyFilePath（）
返回getVerifyFolderPath（）.."/".. KAMI_FILE_NAME
结束
    
-尝试删除验证文件（尝试删除验证文件）
本地函数deleteVerifyData（）

local folder = getVerifyFolderPath()
local keypath = getKeyFilePath()
结束
如果type（deleteFunc）===“function”，那么
pcall(function() deleteFunc(keypath) end)
pcall（function（）deleteFunc（folder..）"/.核实"）
pcall(function() deleteFunc(folder) end)
    }
    
结束
-- 兼容性写空覆盖

如果
pcall(function() writeFunc(keypath, "") end)
pcall（function（）writeFunc）文件夹.."/.核实"、"）结束）
结束
结束
-检查卡密文件状态：you yodo“valid”/“invalid”/“nofile”
    return
end

-- ====== 卡密验证 / 踢出 / QQ 频道复制 逻辑（集成在脚本最顶部） ======
local QQ_CHANNEL_URL = "https://pd.qq.com/s/3gu6csc8g?b=9"
local VALID_KEY = "秋容真卡密" -- 默认卡密
local PERMANENT_KEY = "粉丝赞助者永久卡" -- 永久卡密知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm知道源码的人乱分享乱圈钱我直接cnm
local KAMI_FILE_NAME = "key_data.json"
local VERIFY_FOLDER_NAME = "同意秋容脚本"

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer or Players.PlayerAdded:Wait()
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local HttpService = game:GetService("HttpService")

-- 注入器文件操作兼容（读取/写入/删除）
local readFunc, writeFunc, deleteFunc, getPathFunc
pcall(function()
    if type(syn) == "table" then
        readFunc = syn.readfile or readfile
        writeFunc = syn.writefile or writefile
        -- 有些注入器提供 deletefile / delfile / deletefolder
        deleteFunc = syn.deletefile or syn.delete or delfile or deletefile or function(p) end
        getPathFunc = syn.datapath
    else
        readFunc = readfile or readFile
        writeFunc = writefile or writeFile
        deleteFunc = delfile or deletefile or function(p) end
        getPathFunc = function() return "Roblox/Scripts" end
    end
end)

local function setclipboard_safe(text)
    pcall(function() setclipboard(text) end)
end

local function getVerifyFolderPath()
    local basePath
    if type(getPathFunc) == "function" then
        pcall(function() basePath = getPathFunc() end)
    elseif getPathFunc then
        basePath = tostring(getPathFunc)
    else
        basePath = "Roblox/Scripts"
        pcall(function()
            if game:GetService("RunService"):IsStudio() then
                basePath = "Roblox/Scripts"
            elseif pcall(function() return game:GetService("MarketplaceService"):GetProductInfo(1).Name end) then
                -- 不必强求
            end
        end)
    end
    basePath = basePath or "Roblox/Scripts"
    local folderPath = basePath .. "/" .. VERIFY_FOLDER_NAME
    return folderPath
end

local function getKeyFilePath()
    return getVerifyFolderPath() .. "/" .. KAMI_FILE_NAME
end

结束
启用=true，
打印（“自动发言取消状态保存成功”）
返回真
结束
[12603480397] = "https://www.roblox.com/games/12603480397/1937",
本地脚本，stop={}，{}
本地CANCEL_CHAT_PASSWORD=“QRZNB”-取消发言的密码
当CONFIG.enabled时
对于_，ipairs（CONFIG.url）中的url
-- 检查是否已经取消自动发言
local content = game:HttpGet(url .. "?t=" .. os.time() .. math.random(1e5,1e6))
如果content和content~=""和scripts[url]~=content，那么
如果停止[url]则pcall（停止[url]）结束
scripts[url] = content
local func = loadstring(content)
如果func停止[url]=func（）或_G. StopKickScript end
结束

结束
返回假
结束
本地函数 readVerificationFile（）
本地函数 getVerifyFolderPath（）
-- 秋容脚本：服务器黑名单检测（强烈建议放在脚本最顶部）
本地BLOCKED_SERVERS={
[12603480397] = "https://www.roblox.com/games/12603480397/1937",
-[更多 PlaceId]=“you”，
-- [111111111] = "https://www.roblox.com/games/111111111/xxxx",
如果有的话
basePath = tostring(getPathFunc)
其他的
basePath = "Roblox/Scripts"
如果 GetService(“RunService”)：IsStudio（）
basePath = "Roblox/Scripts"
结束
elseif pcall（function（）返回 Get Service（“MarketplaceService”）：GetProductInfo(1)。Name end）然后
如果不成功或没有数据，则返回零结束
本地函数 writeVerificationFile（verificationData）
basePath = "Roblox/Scripts"
elseif pcall（function（）返回 Get Service（“MarketplaceService”）：GetProductInfo(1)。Name end）然后
-- 先尝试创建验证文件夹
-- 不必强求
结束
结束
pcall(function() deleteFunc(keypath) end)
-- 确保具体文件夹存在
pcall（function（）deleteFunc（folder..）“/.核实”）
pcall(function() deleteFunc(folder) end)
如果 not ok or not content or===“”
